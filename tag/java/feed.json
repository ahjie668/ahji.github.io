{
    "version": "https://jsonfeed.org/version/1",
    "title": "码坑的博客 • All posts by \"java\" tag",
    "description": "本人是小白,初次与各位相遇,请多多指教,谢谢 じ萌喵喵ルゞ Ю↘ 珂ル°",
    "home_page_url": "https://ahjie668.github.io/ahjie668",
    "items": [
        {
            "id": "https://ahjie668.github.io/ahjie668/java/sort/",
            "url": "https://ahjie668.github.io/ahjie668/java/sort/",
            "title": "Java中的数组排序",
            "date_published": "2020-10-15T12:08:10.455Z",
            "content_html": "<h2 id=\"冒泡排序\"><a class=\"markdownIt-Anchor\" href=\"#冒泡排序\">#</a> 💍 冒泡排序</h2>\n<div class=\"note info\">\n<p><span class=\"rainbow\">基本思想:</span></p>\n<p>冒泡排序法：顾名思义，从下到上，两两进行比较，越小的越往上，从而形成由小到大的排序。冒泡排序的基本思想是对比相邻的原始值，如果满足条件就交换元素值，把较小的元素移到数组前面，把大的元素移动到数组的后面，这样较小的元素就像气泡从底部上升到顶部。</p>\n</div>\n<figure class=\"highlight java\"><figcaption><span>JAVA</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] arr1 = &#123;<span class=\"number\">3</span>, <span class=\"number\">22</span>, <span class=\"number\">5</span>, <span class=\"number\">3</span>, <span class=\"number\">66</span>, <span class=\"number\">2</span>, <span class=\"number\">9</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">        sort1(arr1);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//使用foreach循环输出</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> x : arr1) &#123;</span><br><span class=\"line\">            System.out.println(x + <span class=\"string\">&quot; &quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//使用字符串表达形式输出，输出形式更为直观</span></span><br><span class=\"line\">        System.out.println(Arrays.toString(arr));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">sort1</span><span class=\"params\">(<span class=\"keyword\">int</span>[] arr1)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> temp;</span><br><span class=\"line\">        <span class=\"comment\">//根据角标进行比较，</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; arr1.length; i++) &#123;</span><br><span class=\"line\">            <span class=\"comment\">//j是数组的最后一个角标</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = arr1.length - <span class=\"number\">1</span>; j &gt; i; j--) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (arr1[j] &lt; arr1[j - <span class=\"number\">1</span>]) &#123;</span><br><span class=\"line\">                    <span class=\"comment\">//从后往前进行比较，小数往前，一轮之后最小数就在最前面了</span></span><br><span class=\"line\">                    temp = arr1[j - <span class=\"number\">1</span>];</span><br><span class=\"line\">                    arr1[j - <span class=\"number\">1</span>] = arr1[j];</span><br><span class=\"line\">                    arr1[j] = temp;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"调用arrayssort类方法进行排序\"><a class=\"markdownIt-Anchor\" href=\"#调用arrayssort类方法进行排序\">#</a> 💍 调用 Arrays.sort 类方法进行排序</h2>\n<div class=\"note info\">\n<p><span class=\"rainbow\">网上一些说法</span><br>\n快速排序主要是对哪些基本类型数据（int,short,long 等）排序， 而合并排序用于对对象类型进行排序。<br>\n使用不同类型的排序算法主要是由于快速排序是不稳定的，而合并排序是稳定的。这里的稳定是指比较相等的数据在排序之后仍然按照排序之前的前后顺序排列。对于基本数据类型，稳定性没有意义，而对于对象类型，稳定性是比较重要的，因为对象相等的判断可能只是判断关键属性，最好保持相等对象的非关键属性的顺序与排序前一直；另外一个原因是由于合并排序相对而言比较次数比快速排序少，移动（对象引用的移动）次数比快速排序多，而对于对象来说，比较一般比移动耗时。<br>\n补充一点合并排序的时间复杂度是 nlogn, 快速排序的平均时间复杂度也是 nlogn，但是合并排序的需要额外的 n 个引用的空间 ……</p>\n</div>\n<figure class=\"highlight java\"><figcaption><span>JAVA</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 第一种    </span></span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] arr2 = &#123;<span class=\"number\">0</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">6</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>,<span class=\"number\">2</span>,<span class=\"number\">5</span>,<span class=\"number\">1</span>,<span class=\"number\">7</span>&#125;;</span><br><span class=\"line\">        Arrays.sort(arr2);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; arr2.length ; i++)&#123;</span><br><span class=\"line\">             System.out.print(arr2[i]+<span class=\"string\">&quot; &quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 第二种调用本类方法实现    </span></span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] arr2 = &#123;<span class=\"number\">89</span>,<span class=\"number\">59</span>,<span class=\"number\">12</span>,<span class=\"number\">36</span>,<span class=\"number\">45</span>,<span class=\"number\">0</span>,<span class=\"number\">6</span>,<span class=\"number\">1</span>,<span class=\"number\">3</span>,<span class=\"number\">2</span>&#125;;</span><br><span class=\"line\">    Arrays.sort(arr2);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt;arr2.length ; i++) &#123;</span><br><span class=\"line\">            System.out.print(arr2[i]+<span class=\"string\">&quot; &quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    sort2(arr2);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 第三种</span></span><br><span class=\"line\">     <span class=\"keyword\">int</span>[] arr = &#123;<span class=\"number\">4</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">9</span>, <span class=\"number\">3</span>, <span class=\"number\">0</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">        Arrays.sort(arr, <span class=\"number\">1</span>, <span class=\"number\">4</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">            System.out.print(arr[i] + <span class=\"string\">&quot;,&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">sort2</span><span class=\"params\">(<span class=\"keyword\">int</span>[] arr2)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//第二种调用本类方法实现    </span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"选择排序\"><a class=\"markdownIt-Anchor\" href=\"#选择排序\">#</a> 💍 选择排序</h2>\n<div class=\"note info\">\n<p><span class=\"rainbow\">基本思想:</span><br>\n 直接选择排序的基本思想是将指定排序位置与其他数组元素分别对比，如果满足条件就交换元素值，指定这里区别冒泡排序，不是交换相邻元素，而是把满足条件的元素与指定的排序位置交换（如果最后一个元素开始排序，第一步就是将数组中的最大数值与数组最后一位交换位置，以此类推），这样排序好的位置就会逐渐扩大，最好整个数组都成为已经排序好的格式。</p>\n</div>\n<figure class=\"highlight java\"><figcaption><span>JAVA</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        sort();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">sort</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] arr3 = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[]&#123;<span class=\"number\">45</span>, <span class=\"number\">23</span>, <span class=\"number\">15</span>, <span class=\"number\">89</span>, <span class=\"number\">68</span>, <span class=\"number\">12</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">2</span>&#125;;</span><br><span class=\"line\">        <span class=\"comment\">// int temp = 0;</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; arr3.length; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = i + <span class=\"number\">1</span>; j &lt; arr3.length; j++) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (arr3[i] &gt; arr3[j]) &#123;</span><br><span class=\"line\">                   <span class=\"keyword\">int</span> temp = arr3[i];</span><br><span class=\"line\">                    arr3[i] = arr3[j];</span><br><span class=\"line\">                    arr3[j] = temp;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class=\"line\">            System.out.print(arr[i] + <span class=\"string\">&quot; &quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"总结\"><a class=\"markdownIt-Anchor\" href=\"#总结\">#</a> 💍 总结</h2>\n<h2 id=\"以上就是本文关于java中的数组排序代码详解的全部内容希望对大家有所帮助-感兴趣的朋友可以继续参阅本站其他java相关专题如有不足之处欢迎留言指出-感谢朋友们对本站的支持\"><a class=\"markdownIt-Anchor\" href=\"#以上就是本文关于java中的数组排序代码详解的全部内容希望对大家有所帮助-感兴趣的朋友可以继续参阅本站其他java相关专题如有不足之处欢迎留言指出-感谢朋友们对本站的支持\">#</a> 💍 以上就是本文关于 Java 中的数组排序代码详解的全部内容，希望对大家有所帮助。感兴趣的朋友可以继续参阅本站其他 Java 相关专题，如有不足之处，欢迎留言指出。感谢朋友们对本站的支持！</h2>\n",
            "tags": [
                "JAVA"
            ]
        },
        {
            "id": "https://ahjie668.github.io/ahjie668/java/pom%E6%8A%A5%E9%94%99/",
            "url": "https://ahjie668.github.io/ahjie668/java/pom%E6%8A%A5%E9%94%99/",
            "title": "pom.xml的标签报错 Element ‘project‘ cannot have character [children], because the type‘s content**",
            "date_published": "2020-08-25T13:45:50.197Z",
            "content_html": "<p><strong>CSDN 地址:<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0ODQxNDMyL2FydGljbGUvZGV0YWlscy8xMDc3NjgxOTc=\">https://blog.csdn.net/qq_44841432/article/details/107768197</span></strong></p>\n<h2 id=\"pomxml的报错\"><a class=\"markdownIt-Anchor\" href=\"#pomxml的报错\">#</a> 💍 pom.xml 的报错</h2>\n<p><img data-src=\"https://img-blog.csdnimg.cn/20200803164619221.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0ODQxNDMy,size_16,color_FFFFFF,t_70#pic_center\" alt></p>\n<figure class=\"highlight\"><figcaption><span>JAVA</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//首先看到的报错的标签</span></span><br><span class=\"line\">&lt;project&gt;</span><br><span class=\"line\">.......</span><br><span class=\"line\">.......</span><br><span class=\"line\">&lt;/project&gt;</span><br></pre></td></tr></table></figure>\n<p>其实这个错误的来源是某些编译器导致的，比如现在我们常用的开发工具 -&gt;IDEA -&gt;Eclipse, 这个两种工具，其中 IDEA 他的弊端在于有时候导致明明写对的代码报错出现红杠，<br>\n这个也是编译器导致的，当然这种情况不会频繁的出现，只是偶尔出现，对比起来这个两个工具 IDEA 的好用些，代码提示功能强大，也不同自己去导 jar 包，也大大的提升了开发的效率.</p>\n<h2 id=\"解决方法\"><a class=\"markdownIt-Anchor\" href=\"#解决方法\">#</a> 💍 解决方法</h2>\n<p>把 pom.xml 文件里面的代码全选复制粘贴到一个外部工具上，这里推荐 Notepad++，复制到 Notepad++ 上面以后把无效的空格删除，删除以后呢在复制粘贴到 IDEA 中，这样就可以解决的报错.</p>\n<h3 id=\"各位有问题也可以搜索微信公众号码坑私信我大家一起讨论学习\"><a class=\"markdownIt-Anchor\" href=\"#各位有问题也可以搜索微信公众号码坑私信我大家一起讨论学习\">#</a> 💍 各位有问题也可以搜索微信公众号” 码坑” 私信我，大家一起讨论学习。</h3>\n<p><img data-src=\"https://qr.api.cli.im/newqr/create?data=http%253A%252F%252Fweixin.qq.com%252Fr%252FxTkRCRjERUU6rVxq92zX&amp;level=H&amp;transparent=0&amp;bgcolor=%23ffffff&amp;forecolor=%2368B56B&amp;blockpixel=12&amp;marginblock=2&amp;logourl=https://mhimg.clewm.net/cli/images/beautify/new/logo/35.png&amp;size=400&amp;logoshape=ellipse&amp;foretype=2&amp;gradient_way=vertical&amp;forecolor2=%2304777A&amp;eye_use_fore=1&amp;background=//static.clewm.net/cli/images/background/31.png&amp;qrcode_eyes=circle_circle&amp;outcolor=%23063492&amp;incolor=%231183E8&amp;body_type=17&amp;water_ratio=1&amp;qr_rotate=0&amp;text=&amp;kid=bizcliim&amp;time=1598267946&amp;key=5d831a6325d08f0fe6e1b90c8f28ea26\" alt=\"微信公众号\"></p>\n",
            "tags": [
                "JAVA"
            ]
        },
        {
            "id": "https://ahjie668.github.io/ahjie668/java/java%E5%9F%BA%E7%A1%80/",
            "url": "https://ahjie668.github.io/ahjie668/java/java%E5%9F%BA%E7%A1%80/",
            "title": "JAVA的JDK安装步骤",
            "date_published": "2020-08-20T07:50:41.096Z",
            "content_html": "<p>对于一个 JAVA 或 android 开发者来说，JDK 的安装是做任何事的前提。但现在有好多教程的 JDK 安装配置方法繁琐重复，容易误导新手，本教程可以说是最简单经典实用的配置方法。</p>\n<h2 id=\"快速开始\"><a class=\"markdownIt-Anchor\" href=\"#快速开始\">#</a> 💍 快速开始</h2>\n<h3 id=\"步骤一\"><a class=\"markdownIt-Anchor\" href=\"#步骤一\">#</a> 💍步骤一</h3>\n<p>首先我们当然需要去 oracle 官网下载 JDK。<br>\n点击蓝色圈住的图片，选择相应版本并下载。x86 是 32 位版，64 是 64 位系统版。<br>\n<img data-src=\"https://exp-picture.cdn.bcebos.com/2f2909e951e10ef8f928728e2324d8e9cdd2ccd1.jpg?x-bce-process=image%2Fresize%2Cm_lfit%2Cw_500%2Climit_1\" alt=\"步骤一\"></p>\n<a id=\"more\"></a>\n<h3 id=\"步骤二\"><a class=\"markdownIt-Anchor\" href=\"#步骤二\">#</a> 💍 步骤二</h3>\n<p>下载完成后，双击运行，一路下一步，安装完成。<br>\n<img data-src=\"https://exp-picture.cdn.bcebos.com/0fb94656d53da8247c976b61306651598440cbd1.jpg?x-bce-process=image%2Fresize%2Cm_lfit%2Cw_500%2Climit_1\" alt=\"步骤二\"></p>\n<h3 id=\"步骤三\"><a class=\"markdownIt-Anchor\" href=\"#步骤三\">#</a> 💍 步骤三</h3>\n<p>安装完 JDK 后，国际惯例配置环境变量。首先鼠标右键点击计算机–〉属性–〉高级系统设置<br>\n<img data-src=\"https://exp-picture.cdn.bcebos.com/d9a8d2d2bb6651592d3eb7998fe23ea23b42c7d1.jpg?x-bce-process=image%2Fresize%2Cm_lfit%2Cw_500%2Climit_1\" alt=\"步骤三\"></p>\n<h3 id=\"步骤四\"><a class=\"markdownIt-Anchor\" href=\"#步骤四\">#</a> 💍 步骤四</h3>\n<p>进入高级系统设置后，点击高级–〉环境变量<br>\n<img data-src=\"https://exp-picture.cdn.bcebos.com/3fe32442a07aa010134d4b8bbfbb19efa35f3ed6.jpg?x-bce-process=image%2Fresize%2Cm_lfit%2Cw_500%2Climit_1\" alt></p>\n<h3 id=\"步骤五\"><a class=\"markdownIt-Anchor\" href=\"#步骤五\">#</a> 💍 步骤五</h3>\n<p>环境变量中看见 path 一项，点击 path，点击编辑。<br>\n<img data-src=\"https://exp-picture.cdn.bcebos.com/18aebc5f0c14c27b64fc213a2a46b7b1eff939d6.jpg?x-bce-process=image%2Fresize%2Cm_lfit%2Cw_500%2Climit_1\" alt=\"步骤四\"></p>\n<h3 id=\"步骤六\"><a class=\"markdownIt-Anchor\" href=\"#步骤六\">#</a> 💍 步骤六</h3>\n<p>在变量值的最前面，添加 C:\\Program Files\\Java\\jdk1.8.0_91\\bin<br>\n 确定即可。<br>\n该路径为你的 jdk 安装好后的 bin 目录的路径，注意路径要放在双引号内，且结尾加封号。<br>\n<img data-src=\"https://exp-picture.cdn.bcebos.com/a007a9b1eef97fbdf0029300b74133bad24133d6.jpg?x-bce-process=image%2Fresize%2Cm_lfit%2Cw_500%2Climit_1\" alt=\"步骤六\"></p>\n<h3 id=\"步骤七\"><a class=\"markdownIt-Anchor\" href=\"#步骤七\">#</a> 💍 步骤七</h3>\n<p>如何验证是否安装成功，可以在 cmd 命令窗口中输入 javac 命令来查看。返回一大堆命令参数即可说明安装成功。怎么样，是不是很简单呢。</p>\n<p><img data-src=\"https://ss0.bdstatic.com/70cFuHSh_Q1YnxGkpoWK1HF6hhy/it/u=3304687086,2297012972&amp;fm=15&amp;gp=0.jpg\" alt=\"步骤七\"></p>\n",
            "tags": [
                "JAVA"
            ]
        }
    ]
}