{
    "version": "https://jsonfeed.org/version/1",
    "title": "码坑的博客 • All posts by \"linkedelist和arraylist的区别\" category",
    "description": "本人是小白,初次与各位相遇,请多多指教,谢谢 じ萌喵喵ルゞ Ю↘ 珂ル°",
    "home_page_url": "https://ahjie.top",
    "items": [
        {
            "id": "https://ahjie.top/java/LinkedeList%E5%92%8CArrayList%E7%9A%84%E5%8C%BA%E5%88%AB/",
            "url": "https://ahjie.top/java/LinkedeList%E5%92%8CArrayList%E7%9A%84%E5%8C%BA%E5%88%AB/",
            "title": "LinkedeList和ArrayList的区别",
            "date_published": "2021-11-12T08:26:15.246Z",
            "content_html": "<p><strong>LinkedeList 和 ArrayList 是常用的两种存储结构，都可以实现了 List 接口，那么它们之间有什么区别？下面本篇文章就来带大家了解一下 LinkedeList 和 ArrayList 之间的区别，希望对大家有所帮助。</strong></p>\n<p><img data-src=\"https://files.mdnice.com/user/15077/38bea21b-05b4-4a3e-8431-35579ec328b0.png\" alt></p>\n<h2 id=\"linkedelist和arraylist的区别\"><a class=\"markdownIt-Anchor\" href=\"#linkedelist和arraylist的区别\">#</a> LinkedeList 和 ArrayList 的区别</h2>\n<h3 id=\"1-数据结构不同\"><a class=\"markdownIt-Anchor\" href=\"#1-数据结构不同\">#</a> 1、数据结构不同</h3>\n<p>ArrayList 是 Array (动态数组) 的数据结构，LinkedList 是 Link (链表) 的数据结构。</p>\n<h3 id=\"2-效率不同\"><a class=\"markdownIt-Anchor\" href=\"#2-效率不同\">#</a> 2、效率不同</h3>\n<p>当随机访问 List（get 和 set 操作）时，ArrayList 比 LinkedList 的效率更高，因为 LinkedList 是线性的数据存储方式，所以需要移动指针从前往后依次查找。</p>\n<p>当对数据进行增加和删除的操作 (add 和 remove 操作) 时，LinkedList 比 ArrayList 的效率更高，因为 ArrayList 是数组，所以在其中进行增删操作时，会对操作点之后所有数据的下标索引造成影响，需要进行数据的移动</p>\n<h3 id=\"3-自由性不同\"><a class=\"markdownIt-Anchor\" href=\"#3-自由性不同\">#</a> 3、自由性不同</h3>\n<p>ArrayList 自由性较低，因为它需要手动的设置固定大小的容量，但是它的使用比较方便，只需要创建，然后添加数据，通过调用下标进行使用；而 LinkedList 自由性较高，能够动态的随数据量的变化而变化，但是它不便于使用。</p>\n<h3 id=\"4-主要控件开销不同\"><a class=\"markdownIt-Anchor\" href=\"#4-主要控件开销不同\">#</a> 4、主要控件开销不同</h3>\n<p>ArrayList 主要控件开销在于需要在 lList 列表预留一定空间；而 LinkList 主要控件开销在于需要存储结点信息以及结点指针信息。</p>\n<p><strong>简单的写了一个 List 集合（ArrayList 和 LinkedList 的 Demo</strong></p>\n<figure class=\"highlight java\"><figcaption><span>Java</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span></span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span>  <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;  </span><br><span class=\"line\">    \t\t<span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">    \t\t * ArrayList和LinkedList的区别：</span></span><br><span class=\"line\"><span class=\"comment\">    \t\t * 两者方法完全通用，效果也一样。只不过在存储的内部结构是不同的。</span></span><br><span class=\"line\"><span class=\"comment\">    \t\t * ArrayList（动态数组）本身自带索引，更善于查找</span></span><br><span class=\"line\"><span class=\"comment\">    \t\t * LinkedList（链式结构）更善于添加和删除</span></span><br><span class=\"line\"><span class=\"comment\">    \t\t * */</span></span><br><span class=\"line\">    \t\tList list = <span class=\"keyword\">new</span> ArrayList();</span><br><span class=\"line\">    \t\t<span class=\"comment\">//List list = new LinkedList();</span></span><br><span class=\"line\">    \t\t</span><br><span class=\"line\">    \t\tlist.add(<span class=\"string\">&quot;窗前明月光&quot;</span>);<span class=\"comment\">//添加值</span></span><br><span class=\"line\">    \t\tlist.add(<span class=\"string\">&quot;疑是地上霜&quot;</span>);</span><br><span class=\"line\">    \t\tlist.add(<span class=\"string\">&quot;举头望明月&quot;</span>);</span><br><span class=\"line\">    \t\tlist.add(<span class=\"string\">&quot;低头思故乡&quot;</span>);</span><br><span class=\"line\">    \t\t</span><br><span class=\"line\">    \t\tlist.add(<span class=\"keyword\">null</span>);</span><br><span class=\"line\">    \t\tlist.remove(<span class=\"number\">1</span>);</span><br><span class=\"line\">    \t\tlist.add(<span class=\"number\">1</span>,<span class=\"string\">&quot;我插入一句话&quot;</span>);<span class=\"comment\">//在索引为1的后面插入</span></span><br><span class=\"line\">    \t\tlist.set(<span class=\"number\">1</span>, <span class=\"string\">&quot;这句话我改了&quot;</span>);<span class=\"comment\">//更改索引为1的值</span></span><br><span class=\"line\">    \t\t</span><br><span class=\"line\">    \t\tSystem.out.println(list.size());<span class=\"comment\">//得到长度</span></span><br><span class=\"line\">    \t\tSystem.out.println(list.get(<span class=\"number\">1</span>));<span class=\"comment\">//得到索引为1下标的值</span></span><br><span class=\"line\">    \t\t</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "JAVA"
            ]
        }
    ]
}