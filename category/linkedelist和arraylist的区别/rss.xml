<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>码坑的博客 • Posts by &#34;linkedelist和arraylist的区别&#34; category</title>
        <link>https://ahjie.top</link>
        <description>本人是小白,初次与各位相遇,请多多指教,谢谢 じ萌喵喵ルゞ Ю↘ 珂ル°</description>
        <language>zh-Hans</language>
        <pubDate>Fri, 12 Nov 2021 16:26:15 +0800</pubDate>
        <lastBuildDate>Fri, 12 Nov 2021 16:26:15 +0800</lastBuildDate>
        <category>其他</category>
        <category>Hexo</category>
        <category>JAVA</category>
        <category>Maven</category>
        <category>php</category>
        <category>html</category>
        <category>JavaScript</category>
        <category>css</category>
        <category>React</category>
        <category>Vue</category>
        <category>Docker</category>
        <item>
            <guid isPermalink="true">https://ahjie.top/java/LinkedeList%E5%92%8CArrayList%E7%9A%84%E5%8C%BA%E5%88%AB/</guid>
            <title>LinkedeList和ArrayList的区别</title>
            <link>https://ahjie.top/java/LinkedeList%E5%92%8CArrayList%E7%9A%84%E5%8C%BA%E5%88%AB/</link>
            <category>JAVA</category>
            <pubDate>Fri, 12 Nov 2021 16:26:15 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;strong&gt;LinkedeList 和 ArrayList 是常用的两种存储结构，都可以实现了 List 接口，那么它们之间有什么区别？下面本篇文章就来带大家了解一下 LinkedeList 和 ArrayList 之间的区别，希望对大家有所帮助。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://files.mdnice.com/user/15077/38bea21b-05b4-4a3e-8431-35579ec328b0.png&#34; alt&gt;&lt;/p&gt;
&lt;h2 id=&#34;linkedelist和arraylist的区别&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#linkedelist和arraylist的区别&#34;&gt;#&lt;/a&gt; LinkedeList 和 ArrayList 的区别&lt;/h2&gt;
&lt;h3 id=&#34;1-数据结构不同&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1-数据结构不同&#34;&gt;#&lt;/a&gt; 1、数据结构不同&lt;/h3&gt;
&lt;p&gt;ArrayList 是 Array (动态数组) 的数据结构，LinkedList 是 Link (链表) 的数据结构。&lt;/p&gt;
&lt;h3 id=&#34;2-效率不同&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2-效率不同&#34;&gt;#&lt;/a&gt; 2、效率不同&lt;/h3&gt;
&lt;p&gt;当随机访问 List（get 和 set 操作）时，ArrayList 比 LinkedList 的效率更高，因为 LinkedList 是线性的数据存储方式，所以需要移动指针从前往后依次查找。&lt;/p&gt;
&lt;p&gt;当对数据进行增加和删除的操作 (add 和 remove 操作) 时，LinkedList 比 ArrayList 的效率更高，因为 ArrayList 是数组，所以在其中进行增删操作时，会对操作点之后所有数据的下标索引造成影响，需要进行数据的移动&lt;/p&gt;
&lt;h3 id=&#34;3-自由性不同&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3-自由性不同&#34;&gt;#&lt;/a&gt; 3、自由性不同&lt;/h3&gt;
&lt;p&gt;ArrayList 自由性较低，因为它需要手动的设置固定大小的容量，但是它的使用比较方便，只需要创建，然后添加数据，通过调用下标进行使用；而 LinkedList 自由性较高，能够动态的随数据量的变化而变化，但是它不便于使用。&lt;/p&gt;
&lt;h3 id=&#34;4-主要控件开销不同&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#4-主要控件开销不同&#34;&gt;#&lt;/a&gt; 4、主要控件开销不同&lt;/h3&gt;
&lt;p&gt;ArrayList 主要控件开销在于需要在 lList 列表预留一定空间；而 LinkList 主要控件开销在于需要存储结点信息以及结点指针信息。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;简单的写了一个 List 集合（ArrayList 和 LinkedList 的 Demo&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption&gt;&lt;span&gt;Java&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; java.util.*;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Main&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt;  &lt;span class=&#34;title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    		&lt;span class=&#34;comment&#34;&gt;/*&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;    		 * ArrayList和LinkedList的区别：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;    		 * 两者方法完全通用，效果也一样。只不过在存储的内部结构是不同的。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;    		 * ArrayList（动态数组）本身自带索引，更善于查找&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;    		 * LinkedList（链式结构）更善于添加和删除&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;    		 * */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    		List list = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; ArrayList();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    		&lt;span class=&#34;comment&#34;&gt;//List list = new LinkedList();&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    		list.add(&lt;span class=&#34;string&#34;&gt;&amp;quot;窗前明月光&amp;quot;&lt;/span&gt;);&lt;span class=&#34;comment&#34;&gt;//添加值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    		list.add(&lt;span class=&#34;string&#34;&gt;&amp;quot;疑是地上霜&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    		list.add(&lt;span class=&#34;string&#34;&gt;&amp;quot;举头望明月&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    		list.add(&lt;span class=&#34;string&#34;&gt;&amp;quot;低头思故乡&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    		list.add(&lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    		list.remove(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    		list.add(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;我插入一句话&amp;quot;&lt;/span&gt;);&lt;span class=&#34;comment&#34;&gt;//在索引为1的后面插入&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    		list.set(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;这句话我改了&amp;quot;&lt;/span&gt;);&lt;span class=&#34;comment&#34;&gt;//更改索引为1的值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    		System.out.println(list.size());&lt;span class=&#34;comment&#34;&gt;//得到长度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    		System.out.println(list.get(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;));&lt;span class=&#34;comment&#34;&gt;//得到索引为1下标的值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
 ]]></description>
        </item>
    </channel>
</rss>
