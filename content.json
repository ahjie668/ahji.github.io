{"meta":{"title":"码坑","subtitle":"本人是小白,初次与各位相遇,请多多指教,谢谢 じ萌喵喵ルゞ Ю↘ 珂ル°","description":"","author":"码坑","url":"https://ahjie668.github.io/ahjie668","root":"/"},"pages":[{"title":"关于","date":"2020-08-19T13:29:12.000Z","updated":"2020-08-24T13:24:32.713Z","comments":true,"path":"about/index.html","permalink":"https://ahjie668.github.io/ahjie668/about/index.html","excerpt":"","text":"关于我 本人热爱好计算机编程，热爱音乐，并且也是一位小白，初次与各位朋友相遇，还希望大家多多支持，如果有什么做的不好的请指点一二,大家一起讨论一起学习进步 博客 本博客始于:2020年8月18日搭建此博客是为了结实更多的朋友，大家能够来到我的博客是一种缘分也是为了能和大家一起学习更多的东西 微信公众号各位有问题也可以搜索微信公众号”码坑”私信我，大家一起讨论学习。"},{"title":"互换友链","date":"2020-08-24T08:05:18.000Z","updated":"2020-08-24T13:21:34.502Z","comments":true,"path":"friends/index.html","permalink":"https://ahjie668.github.io/ahjie668/friends/index.html","excerpt":"","text":"前言&emsp;&emsp;如果您也有自己的个人博客，并且想要互换友链，可以先在贵站添加我的站点：https://www.ahjie.top，站名：码坑的博客。然后再在下方留言,并注明贵站的类型**，审核之后贵站的信息就会被添加到下方列表中～ 友链列表&emsp;&emsp;以下排名不分先后，欢迎访问(～￣▽￣)～ 阿杰代刷 代刷各种Q钻 & QQ代挂"},{"title":"文章分类","date":"2020-08-19T11:29:19.000Z","updated":"2020-08-19T13:25:00.987Z","comments":true,"path":"categories/index.html","permalink":"https://ahjie668.github.io/ahjie668/categories/index.html","excerpt":"","text":""},{"title":"标签","date":"2020-08-19T11:28:05.000Z","updated":"2020-08-19T13:14:38.790Z","comments":true,"path":"tags/index.html","permalink":"https://ahjie668.github.io/ahjie668/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Maven的安装及配置","slug":"Maven安装配置","date":"2020-08-25T14:19:12.817Z","updated":"2020-08-27T15:41:34.421Z","comments":true,"path":"2020/08/25/Maven安装配置/","link":"","permalink":"https://ahjie668.github.io/ahjie668/2020/08/25/Maven%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/","excerpt":"","text":"安装本地MavenMaven下载地址:https://maven.apache.org/download.cgi 点击箭头所指的链接进行下载 下载好了以后解压到你要存储的盘符 ,我存放地址是 环境变量 系统变量:MAVEN_HOME = F:\\dev\\apache-maven-3.6.1 系统变量:path = %MAVEN_HOME%\\binMAVEN_HOME: path: 然后win+R 运行cmd 输入 mvn -version，如图所示则配置成功 配置settings文件 在F:\\dev\\apache-maven-3.6.1\\conf下可以找到settings文件，打开(嫌麻烦的直接看最后一步) 找到第52行，这里是maven默认的仓库 我们复制第53行1&lt;localRepository&gt;/path/to/local/repo&lt;/localRepository&gt; 将它拿到注释外并将中间的内容改成你需要的路径，如图 1&lt;localRepository&gt;F:/repository&lt;/localRepository&gt; 这里的路径随便设置，注意这里是正斜杠 ##因为国外的服务器下载jar包很慢所以我们改为阿里云服务器 （大约在150行左右），这两个仓库只用选一个(根据大家反馈建议使用第一个，第二个在有的版本可能会出现warning) 123456789101112131415&lt;!-- 阿里云仓库 --&gt; &lt;mirror&gt; &lt;id&gt;alimaven&lt;/id&gt; &lt;mirrorOf&gt;central&lt;/mirrorOf&gt; &lt;name&gt;aliyun maven&lt;/name&gt; &lt;url&gt;http://maven.aliyun.com/nexus/content/repositories/central/&lt;/url&gt; &lt;/mirror&gt; 或者 &lt;mirror&gt; &lt;id&gt;nexus-aliyun&lt;/id&gt; &lt;mirrorOf&gt;*&lt;/mirrorOf&gt; &lt;name&gt;Nexus aliyun&lt;/name&gt; &lt;url&gt;http://maven.aliyun.com/nexus/content/groups/public&lt;/url&gt; &lt;/mirror&gt; 如图，要夹在两个mirrors标签之间 在最后配置jdk，也要夹在两个profiles标签之间123456789101112131415&lt;!-- java版本 --&gt; &lt;profile&gt; &lt;id&gt;jdk-1.8&lt;/id&gt; &lt;activation&gt; &lt;activeByDefault&gt;true&lt;/activeByDefault&gt; &lt;jdk&gt;1.8&lt;/jdk&gt; &lt;/activation&gt; &lt;properties&gt; &lt;maven.compiler.source&gt;1.8&lt;/maven.compiler.source&gt; &lt;maven.compiler.target&gt;1.8&lt;/maven.compiler.target&gt; &lt;maven.compiler.compilerVersion&gt;1.8&lt;/maven.compiler.compilerVersion&gt; &lt;/properties&gt;&lt;/profile&gt; 配置完成，在命令行输入mvn help:system测试，看到下载链接里面是ailiyun的链接表示配置成功嫌麻烦的直接复制配置文件的内容即可,不过路径还是要改lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;!--Licensed to the Apache Software Foundation (ASF) under oneor more contributor license agreements. See the NOTICE filedistributed with this work for additional informationregarding copyright ownership. The ASF licenses this fileto you under the Apache License, Version 2.0 (the&quot;License&quot;); you may not use this file except in compliancewith the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0Unless required by applicable law or agreed to in writing,software distributed under the License is distributed on an&quot;AS IS&quot; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANYKIND, either express or implied. See the License for thespecific language governing permissions and limitationsunder the License.--&gt;&lt;!-- | This is the configuration file for Maven. It can be specified at two levels: | | 1. User Level. This settings.xml file provides configuration for a single user, | and is normally provided in $&#123;user.home&#125;/.m2/settings.xml. | | NOTE: This location can be overridden with the CLI option: | | -s /path/to/user/settings.xml | | 2. Global Level. This settings.xml file provides configuration for all Maven | users on a machine (assuming they&#x27;re all using the same Maven | installation). It&#x27;s normally provided in | $&#123;maven.conf&#125;/settings.xml. | | NOTE: This location can be overridden with the CLI option: | | -gs /path/to/global/settings.xml | | The sections in this sample file are intended to give you a running start at | getting the most out of your Maven installation. Where appropriate, the default | values (values used when the setting is not specified) are provided. | |--&gt;&lt;settings xmlns=&quot;http://maven.apache.org/SETTINGS/1.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd&quot;&gt; &lt;!-- localRepository | The path to the local repository maven will use to store artifacts. | | Default: $&#123;user.home&#125;/.m2/repository &lt;localRepository&gt;/path/to/local/repo&lt;/localRepository&gt; --&gt;&lt;localRepository&gt;F:/repository&lt;/localRepository&gt; &lt;!-- interactiveMode | This will determine whether maven prompts you when it needs input. If set to false, | maven will use a sensible default value, perhaps based on some other setting, for | the parameter in question. | | Default: true &lt;interactiveMode&gt;true&lt;/interactiveMode&gt; --&gt; &lt;!-- offline | Determines whether maven should attempt to connect to the network when executing a build. | This will have an effect on artifact downloads, artifact deployment, and others. | | Default: false &lt;offline&gt;false&lt;/offline&gt; --&gt; &lt;!-- pluginGroups | This is a list of additional group identifiers that will be searched when resolving plugins by their prefix, i.e. | when invoking a command line like &quot;mvn prefix:goal&quot;. Maven will automatically add the group identifiers | &quot;org.apache.maven.plugins&quot; and &quot;org.codehaus.mojo&quot; if these are not already contained in the list. |--&gt; &lt;pluginGroups&gt; &lt;!-- pluginGroup | Specifies a further group identifier to use for plugin lookup. &lt;pluginGroup&gt;com.your.plugins&lt;/pluginGroup&gt; --&gt; &lt;/pluginGroups&gt; &lt;!-- proxies | This is a list of proxies which can be used on this machine to connect to the network. | Unless otherwise specified (by system property or command-line switch), the first proxy | specification in this list marked as active will be used. |--&gt; &lt;proxies&gt; &lt;!-- proxy | Specification for one proxy, to be used in connecting to the network. | &lt;proxy&gt; &lt;id&gt;optional&lt;/id&gt; &lt;active&gt;true&lt;/active&gt; &lt;protocol&gt;http&lt;/protocol&gt; &lt;username&gt;proxyuser&lt;/username&gt; &lt;password&gt;proxypass&lt;/password&gt; &lt;host&gt;proxy.host.net&lt;/host&gt; &lt;port&gt;80&lt;/port&gt; &lt;nonProxyHosts&gt;local.net|some.host.com&lt;/nonProxyHosts&gt; &lt;/proxy&gt; --&gt; &lt;/proxies&gt; &lt;!-- servers | This is a list of authentication profiles, keyed by the server-id used within the system. | Authentication profiles can be used whenever maven must make a connection to a remote server. |--&gt; &lt;servers&gt; &lt;!-- server | Specifies the authentication information to use when connecting to a particular server, identified by | a unique name within the system (referred to by the &#x27;id&#x27; attribute below). | | NOTE: You should either specify username/password OR privateKey/passphrase, since these pairings are | used together. | &lt;server&gt; &lt;id&gt;deploymentRepo&lt;/id&gt; &lt;username&gt;repouser&lt;/username&gt; &lt;password&gt;repopwd&lt;/password&gt; &lt;/server&gt; --&gt; &lt;!-- Another sample, using keys to authenticate. &lt;server&gt; &lt;id&gt;siteServer&lt;/id&gt; &lt;privateKey&gt;/path/to/private/key&lt;/privateKey&gt; &lt;passphrase&gt;optional; leave empty if not used.&lt;/passphrase&gt; &lt;/server&gt; --&gt; &lt;/servers&gt; &lt;!-- mirrors | This is a list of mirrors to be used in downloading artifacts from remote repositories. | | It works like this: a POM may declare a repository to use in resolving certain artifacts. | However, this repository may have problems with heavy traffic at times, so people have mirrored | it to several places. | | That repository definition will have a unique id, so we can create a mirror reference for that | repository, to be used as an alternate download site. The mirror site will be the preferred | server for that repository. |--&gt; &lt;!-- mirror &lt;mirrors&gt; | Specifies a repository mirror site to use instead of a given repository. The repository that | this mirror serves has an ID that matches the mirrorOf element of this mirror. IDs are used | for inheritance and direct lookup purposes, and must be unique across the set of mirrors. | &lt;mirror&gt; &lt;id&gt;mirrorId&lt;/id&gt; &lt;mirrorOf&gt;repositoryId&lt;/mirrorOf&gt; &lt;name&gt;Human Readable Name for this Mirror.&lt;/name&gt; &lt;url&gt;http://my.repository.com/repo/path&lt;/url&gt; &lt;/mirror&gt; &lt;/mirrors&gt; --&gt; &lt;!-- 阿里云仓库 --&gt; &lt;mirrors&gt; &lt;mirror&gt; &lt;id&gt;nexus-aliyun&lt;/id&gt; &lt;mirrorOf&gt;*&lt;/mirrorOf&gt; &lt;name&gt;Nexus aliyun&lt;/name&gt; &lt;url&gt;http://maven.aliyun.com/nexus/content/groups/public&lt;/url&gt; &lt;/mirror&gt;&lt;/mirrors&gt; &lt;!-- profiles | This is a list of profiles which can be activated in a variety of ways, and which can modify | the build process. Profiles provided in the settings.xml are intended to provide local machine- | specific paths and repository locations which allow the build to work in the local environment. | | For example, if you have an integration testing plugin - like cactus - that needs to know where | your Tomcat instance is installed, you can provide a variable here such that the variable is | dereferenced during the build process to configure the cactus plugin. | | As noted above, profiles can be activated in a variety of ways. One way - the activeProfiles | section of this document (settings.xml) - will be discussed later. Another way essentially | relies on the detection of a system property, either matching a particular value for the property, | or merely testing its existence. Profiles can also be activated by JDK version prefix, where a | value of &#x27;1.4&#x27; might activate a profile when the build is executed on a JDK version of &#x27;1.4.2_07&#x27;. | Finally, the list of active profiles can be specified directly from the command line. | | NOTE: For profiles defined in the settings.xml, you are restricted to specifying only artifact | repositories, plugin repositories, and free-form properties to be used as configuration | variables for plugins in the POM. | |--&gt; &lt;!-- profile &lt;profiles&gt; | Specifies a set of introductions to the build process, to be activated using one or more of the | mechanisms described above. For inheritance purposes, and to activate profiles via &lt;activatedProfiles/&gt; | or the command line, profiles have to have an ID that is unique. | | An encouraged best practice for profile identification is to use a consistent naming convention | for profiles, such as &#x27;env-dev&#x27;, &#x27;env-test&#x27;, &#x27;env-production&#x27;, &#x27;user-jdcasey&#x27;, &#x27;user-brett&#x27;, etc. | This will make it more intuitive to understand what the set of introduced profiles is attempting | to accomplish, particularly when you only have a list of profile id&#x27;s for debug. | | This profile example uses the JDK version to trigger activation, and provides a JDK-specific repo. &lt;profile&gt; &lt;id&gt;jdk-1.4&lt;/id&gt; &lt;activation&gt; &lt;jdk&gt;1.4&lt;/jdk&gt; &lt;/activation&gt; &lt;repositories&gt; &lt;repository&gt; &lt;id&gt;jdk14&lt;/id&gt; &lt;name&gt;Repository for JDK 1.4 builds&lt;/name&gt; &lt;url&gt;http://www.myhost.com/maven/jdk14&lt;/url&gt; &lt;layout&gt;default&lt;/layout&gt; &lt;snapshotPolicy&gt;always&lt;/snapshotPolicy&gt; &lt;/repository&gt; &lt;/repositories&gt; &lt;/profile&gt; --&gt; &lt;!-- | Here is another profile, activated by the system property &#x27;target-env&#x27; with a value of &#x27;dev&#x27;, | which provides a specific path to the Tomcat instance. To use this, your plugin configuration | might hypothetically look like: | | ... | &lt;plugin&gt; | &lt;groupId&gt;org.myco.myplugins&lt;/groupId&gt; | &lt;artifactId&gt;myplugin&lt;/artifactId&gt; | | &lt;configuration&gt; | &lt;tomcatLocation&gt;$&#123;tomcatPath&#125;&lt;/tomcatLocation&gt; | &lt;/configuration&gt; | &lt;/plugin&gt; | ... | | NOTE: If you just wanted to inject this configuration whenever someone set &#x27;target-env&#x27; to | anything, you could just leave off the &lt;value/&gt; inside the activation-property. | &lt;profile&gt; &lt;id&gt;env-dev&lt;/id&gt; &lt;activation&gt; &lt;property&gt; &lt;name&gt;target-env&lt;/name&gt; &lt;value&gt;dev&lt;/value&gt; &lt;/property&gt; &lt;/activation&gt; &lt;properties&gt; &lt;tomcatPath&gt;/path/to/tomcat/instance&lt;/tomcatPath&gt; &lt;/properties&gt; &lt;/profile&gt; --&gt;&lt;profiles&gt;&lt;profile&gt; &lt;id&gt;jdk-1.8&lt;/id&gt; &lt;activation&gt; &lt;activeByDefault&gt;true&lt;/activeByDefault&gt; &lt;jdk&gt;1.8&lt;/jdk&gt; &lt;/activation&gt; &lt;properties&gt; &lt;maven.compiler.source&gt;1.8&lt;/maven.compiler.source&gt; &lt;maven.compiler.target&gt;1.8&lt;/maven.compiler.target&gt; &lt;maven.compiler.compilerVersion&gt;1.8&lt;/maven.compiler.compilerVersion&gt; &lt;/properties&gt;&lt;/profile&gt;&lt;/profiles&gt; &lt;!-- activeProfiles | List of profiles that are active for all builds. | &lt;activeProfiles&gt; &lt;activeProfile&gt;alwaysActiveProfile&lt;/activeProfile&gt; &lt;activeProfile&gt;anotherAlwaysActiveProfile&lt;/activeProfile&gt; &lt;/activeProfiles&gt; --&gt;&lt;/settings&gt; 各位有问题也可以搜索微信公众号”码坑”私信我，大家一起讨论学习。","categories":[{"name":"JAVA","slug":"JAVA","permalink":"https://ahjie668.github.io/ahjie668/categories/JAVA/"},{"name":"Maven","slug":"JAVA/Maven","permalink":"https://ahjie668.github.io/ahjie668/categories/JAVA/Maven/"}],"tags":[{"name":"Maven","slug":"Maven","permalink":"https://ahjie668.github.io/ahjie668/tags/Maven/"}]},{"title":"pom.xml的标签报错 Element ‘project‘ cannot have character [children], because the type‘s content**","slug":"pom报错","date":"2020-08-25T13:45:50.197Z","updated":"2020-08-25T14:22:25.396Z","comments":true,"path":"2020/08/25/pom报错/","link":"","permalink":"https://ahjie668.github.io/ahjie668/2020/08/25/pom%E6%8A%A5%E9%94%99/","excerpt":"","text":"CSDN地址:https://blog.csdn.net/qq_44841432/article/details/107768197 pom.xml的报错 12345//首先看到的报错的标签&lt;project&gt;..............&lt;/project&gt; 其实这个错误的来源是某些编译器导致的,比如现在我们常用的开发工具-&gt;IDEA -&gt;Eclipse,这个两种工具，其中IDEA他的弊端在于有时候导致明明写对的代码报错出现红杠，这个也是编译器导致的,当然这种情况不会频繁的出现,只是偶尔出现,对比起来这个两个工具IDEA的好用些,代码提示功能强大,也不同自己去导jar包,也大大的提升了开发的效率. 解决方法 把pom.xml文件里面的代码全选复制粘贴到一个外部工具上,这里推荐Notepad++，复制到Notepad++上面以后把无效的空格删除,删除以后呢在复制粘贴到IDEA中，这样就可以解决的报错. 各位有问题也可以搜索微信公众号”码坑”私信我，大家一起讨论学习。","categories":[{"name":"JAVA","slug":"JAVA","permalink":"https://ahjie668.github.io/ahjie668/categories/JAVA/"}],"tags":[{"name":"JAVA","slug":"JAVA","permalink":"https://ahjie668.github.io/ahjie668/tags/JAVA/"}]},{"title":"React.js与Vue.js流行框架的比较","slug":"react和vue","date":"2020-08-21T12:33:25.646Z","updated":"2020-08-24T10:17:07.681Z","comments":true,"path":"2020/08/21/react和vue/","link":"","permalink":"https://ahjie668.github.io/ahjie668/2020/08/21/react%E5%92%8Cvue/","excerpt":"JavaScript是世界上最流行的语言之一，React和Vue是JS最流行的两个框架。但哪一款最适合你？ JavaScript越来越受欢迎，许多科技巨头正在从中获益。每天都会出现大量的框架和语言，我们无法跟上所有这些框架和语言的步伐。很难确定哪些值得关注。 JavaScript的世界正以前所未有的速度和作为软件开发的公司，我们无法承受忽视这个时代的讨论最多的框架- React.js和Vue.js。因此，在React与Vue的比较中，我们将根据每个框架的重要优缺点，以及市场趋势和见解，帮助您选择最佳框架。我们拥有一批技术娴熟的开发人员，他们可以随时了解Vue.js和React开发的各个方面。 让我们深入了解细节：在进一步阅读之前，请确保您清楚地了解React和Vue.js是什么。它们是高度重视且广泛使用的JavaScript框架，用于界面设计。","text":"JavaScript是世界上最流行的语言之一，React和Vue是JS最流行的两个框架。但哪一款最适合你？ JavaScript越来越受欢迎，许多科技巨头正在从中获益。每天都会出现大量的框架和语言，我们无法跟上所有这些框架和语言的步伐。很难确定哪些值得关注。 JavaScript的世界正以前所未有的速度和作为软件开发的公司，我们无法承受忽视这个时代的讨论最多的框架- React.js和Vue.js。因此，在React与Vue的比较中，我们将根据每个框架的重要优缺点，以及市场趋势和见解，帮助您选择最佳框架。我们拥有一批技术娴熟的开发人员，他们可以随时了解Vue.js和React开发的各个方面。 让我们深入了解细节：在进一步阅读之前，请确保您清楚地了解React和Vue.js是什么。它们是高度重视且广泛使用的JavaScript框架，用于界面设计。 什么是React？它为什么如此受欢迎？React得到了Facebook社区的支持，使得构建交互式UI非常容易。 React不是MVC框架市场上有许多JavaScript MVC框架在性能和可靠性方面做得相当不错。那么，为什么React如此受欢迎？为什么有人会使用React而不是依赖其他一些MVC框架？ React是一个用于创建可重用且有吸引力的UI组件的库。它非常适合代表经常变化的数据的组件。使用React，您可以通过将它们分解为组件而不是使用模板或HTML来构建可重用的用户界面。 学习一次，随处写作React的官方网站提到了这个关键功能，它说你可以使用React Native框架在JavaScript中构建移动应用程序。 React还介绍了JavaScript XML或JSX的使用，它是JavaScript的语法扩展。React不一定需要JSX，但它在创建UI组件和调试时非常简单有用。 使用React.js的公司Facebook，Instagram，Netflix，纽约时报，雅虎，WhatsApp，Codecademy，Dropbox，Airbnb，Asana，微软 Vue.js简介：渐进式JavaScript框架React和Angular是用于构建Web应用程序的两个顶级JavaScript框架。Vue.js是一个开源JavaScript框架，能够开发单页面应用程序。它还可以用作Web应用程序框架，旨在简化Web开发。Vue.js应用程序开发引起了全球开发人员的极大关注，以构建令人惊叹的Web应用程序。 Vue或Vue.js是一个用于为Web构建引人注目的UI的渐进式框架。它最初于2014年由前Google开发人员Evan You发布，他使用AngularJS并决定排除Angular框架的痛点并构建轻量级的东西。 它的流行有很多原因，其中一个关键原因是它能够在没有任何动作的情况下重新渲染。它允许您构建可重用，小巧但功能强大的组件，因此，它提供了一个可组合的框架，允许您在需要时添加组件。 使用Vue.js的公司1Facebook，Netflix，Adobe，Grammarly，Behance，小米，阿里巴巴，Codeship，Gitlab和Laracasts React.js vs Vue.js：谁赢了这场战斗？这两个框架之间有许多相似之处，例如： 两者都是为了与根库一起使用而构建的。 React.js和Vue.js基于Virtual DOM模型。 这两种工具都具有基于组件的结构。 当然，这两种工具之间存在差异。每个框架都有自己的优点和缺点需要考虑。让我们一个一个地看看每个框架。 React.js的优点： 灵活性和响应性：它提供最大的灵活性和响应能力。 虚拟DOM：由于它基于文档对象模型，因此它允许浏览器友好地以HTML，XHTML或XML格式排列文档。 丰富的JavaScript库：来自世界各地的贡献者正在努力添加更多功能。 可扩展性：由于其灵活的结构和可扩展性，React已被证明对大型应用程序更好。 不断发展： React得到了Facebook专业开发人员的支持，他们不断寻找改进方法。 Web或移动平台： React提供React Native平台，可通过相同的React组件模型为iOS和Android开发本机呈现的应用程序。 无论是Web还是本机移动开发，React都是大多数用户界面设计平台的理想选择。 React.js的缺点： 陡峭的学习曲线：由于复杂的设置过程，属性，功能和结构，它需要深入的知识来构建应用程序。 现在，让我们转到Vue.js并谈谈它的优点和缺点： 与React相比，Vue.js的下载量更少，并且主要用于构建有吸引力的单页面应用程序和Web应用程序。但是，Vue.js具有适应性强的体系结构，使其成为广泛使用的框架之一，具有最新的库和包。 使用Vue.Js的优点 易于使用： Vue.js包含基于HTML的标准模板，可以更轻松地使用和修改现有应用程序。 更顺畅的集成：无论是单页应用程序还是复杂的Web界面，Vue.js都可以更平滑地集成更小的部件，而不会对整个系统产生任何影响。 更好的性能，更小的尺寸：它占用更少的空间，并且往往比其他框架提供更好的性能。 精心编写的文档：通过详细的文档提供简单的学习曲线，无需额外的知识; HTML和JavaScript将完成工作。 适应性：整体声音设计和架构使其成为一种流行的JavaScript框架。它提供无障碍的迁移，简单有效的结构和可重用的模板。 使用Vue.js的缺点与Angular和React相比，Vue.js框架的市场份额仍然很小。它正在快速流行，但与此同时，在使用Vue.js时，可能会出现大规模应用程序开发方面的问题。 好吧，考虑到其现代功能，速度和灵活性，Vue.js有可能实现Web应用程序开发的里程碑。 两个框架的深入比较重新渲染和优化当你比较React和Vue时，速度不能成为决定哪个更好的重要比较因素。在性能方面，让我们考虑重新渲染功能。当组件的状态发生变化时，React的机制会触发整个组件树的重新呈现。您可能需要使用额外的属性来避免不必要地重新渲染子组件。 虽然Vue的重新渲染功能是开箱即用的，但Vue提供了优化的重新渲染，其中系统在渲染过程中跟踪依赖关系并相应地工作。 重新渲染Vue是最显着的特征，使其成为全世界开发人员广泛接受的框架。 JSX与HTMLReact使用JSX - 一种声明性JavaScript XML，允许开发人员利用JavaScript的强大功能编写组件，而Vue.js使用HTML模板创建视图。 基于HTML的模板更加熟悉，在改进现有应用程序以获得Vue反应性功能的好处方面也是有益的。这为初学者和有经验的专业人士提供了一个简单的学习曲线，因为他们中的大多数人都以这种或那种方式使用HTML。 路由和状态管理解决方案在像React和Vue这样的基于组件的框架中，当您开始扩展应用程序时，需要更加关注状态管理和数据流。这是因为有许多组件相互交互并共享数据。 在这种情况下，React提供了一种称为Flux / Redux架构的创新解决方案，它代表单向数据流，是着名MVC架构的替代方案。现在，如果我们考虑Vue.js框架，就会有一个名为Vuex的更高级架构，它集成到Vue中并提供无与伦比的体验。 建筑工具React和Vue都有一个非常好的开发环境。只需很少或没有配置，您就可以创建应用程序，使您能够使用最新的实践和模板。在React中，有一个Create React App（CRA），在Vue中，它是vue-cli。 这两种引导工具都倾向于为您提供舒适灵活的开发环境，并为您提供开始编码的出色起点。 跨平台应用程序开发：谁是赢家？跨平台应用程序开发已经广泛流行，两个框架都在竞相提供卓越的跨平台应用程序开发体验。React的React Native是一个成熟且广泛使用的本机渲染应用程序平台。另一方面，Vue的Weex仍在不断发展，旨在为iOS和Android创建应用程序提供流畅的开发体验。 何时使用Vue.js Over React如果您想要一个轻量级，更快速，更现代的UI库来制作一流的SPA（单页面应用程序），您应该选择Vue.js. 对于习惯使用HTML的开发人员来说，这是有利的。此外，它还提供了组件的可重用性，使其成为开发人员在Web应用程序中构建无与伦比的用户体验的选择。 何时选择React Over Vue.js当你是JavaScript的粉丝！React拥有一个成熟且规模更大的专业开发团队，致力于使其更先进。React由Facebook提供支持，其中包含许多用例，解决方案，资源和项目。此外，由于成熟的用户群，React适用于大规模应用程序和移动应用程序。很明显，如果您想使用JavaScript构建移动应用程序，React Native绝对是您的选择。 但是，要么是构建现代JavaScript应用程序的一个很好的选择，它高度依赖于团队，应用程序大小和可行的方法。 以下是整个评估的快速概述： 在以下场景中，Vue比反应更好： 最新文档和更简单的语法。 更小，更快，更灵活。 丰富的HTML模板，易于开发。React比Vue.js好： 需要构建移动应用程序。 专业和出色的社区支持，以解决任何问题。 需要构建大型应用程序。 轻量级，易于版本迁移。快速React.js与Vue.js比较 总结无论您选择React.js还是Vue.js，两个框架都没有相当大的差异，根据您的要求，这个决定是非常主观的。如果您想将前端JavaScript框架集成到现有应用程序中，Vue.js是更好的选择，如果您想使用JavaScript构建移动应用程序，React绝对是您的选择。 在这里，我们尽量不要偏向任何框架。如果我们遗漏任何可以使本文更全面有价值的重要观点或概念，您可以通过以下评论告诉我们！ 此文章是我个人从网上看到的，感觉还不错，所以发出来与大家共享","categories":[{"name":"web前端","slug":"web前端","permalink":"https://ahjie668.github.io/ahjie668/categories/web%E5%89%8D%E7%AB%AF/"}],"tags":[{"name":"React","slug":"React","permalink":"https://ahjie668.github.io/ahjie668/tags/React/"},{"name":"Vue","slug":"Vue","permalink":"https://ahjie668.github.io/ahjie668/tags/Vue/"}]},{"title":"hexo分类and标签404","slug":"hexo","date":"2020-08-20T08:29:52.301Z","updated":"2020-08-24T10:20:09.845Z","comments":true,"path":"2020/08/20/hexo/","link":"","permalink":"https://ahjie668.github.io/ahjie668/2020/08/20/hexo/","excerpt":"404分类and标签错误处理突然发现博客中，部分分类打不开，点击出现404，在标签中查看，也是小部分标签点击404，但是在所有文章中该分类下的文章都能打开，后来发现这些404的标签或分类名都是后来修改过的，原先的名称开头是大写名称 将大写字母改成小写，hexo 部署正确，但是博客上还是不正确出现404 网上查了许多资料，才发现，git中设置了大小写不敏感","text":"404分类and标签错误处理突然发现博客中，部分分类打不开，点击出现404，在标签中查看，也是小部分标签点击404，但是在所有文章中该分类下的文章都能打开，后来发现这些404的标签或分类名都是后来修改过的，原先的名称开头是大写名称 将大写字母改成小写，hexo 部署正确，但是博客上还是不正确出现404 网上查了许多资料，才发现，git中设置了大小写不敏感 解决方法如下修改 git 设置不忽略大小写 进入博客文件夹，进入 git 目录：.deploy_git ，修改 .git 文件中的配置文件 config，将ignorecase=true 改为 ignorecase=false 123vim . deploy_git/.git/configignorecase = false 如果还没有解决，清空部署到 github 上的文件，重新发布： 1234cd .deploy_gitgit rm -rf *git commit -m &#x27;clean all file&#x27;git push 进入博客文件夹，用 hexo 重新生成部署 123hexo cleanhexo g hexo d or hexo g -d 这些问题都是自己开始搭建博客的时候出现的一些问题，希望能够帮助到各位，如果那里错误，请指点出来，大家一起讨论。","categories":[{"name":"扩展","slug":"扩展","permalink":"https://ahjie668.github.io/ahjie668/categories/%E6%89%A9%E5%B1%95/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://ahjie668.github.io/ahjie668/tags/Hexo/"}]},{"title":"JAVA的JDK安装步骤","slug":"java基础","date":"2020-08-20T07:50:41.096Z","updated":"2020-08-27T16:10:40.632Z","comments":true,"path":"2020/08/20/java基础/","link":"","permalink":"https://ahjie668.github.io/ahjie668/2020/08/20/java%E5%9F%BA%E7%A1%80/","excerpt":"对于一个JAVA或android开发者来说，JDK的安装是做任何事的前提。但现在有好多教程的JDK安装配置方法繁琐重复，容易误导新手，本教程可以说是最简单经典实用的配置方法。 快速开始步骤一首先我们当然需要去oracle官网下载JDK。点击蓝色圈住的图片，选择相应版本并下载。x86是32位版，64是64位系统版。","text":"对于一个JAVA或android开发者来说，JDK的安装是做任何事的前提。但现在有好多教程的JDK安装配置方法繁琐重复，容易误导新手，本教程可以说是最简单经典实用的配置方法。 快速开始步骤一首先我们当然需要去oracle官网下载JDK。点击蓝色圈住的图片，选择相应版本并下载。x86是32位版，64是64位系统版。 步骤二下载完成后，双击运行，一路下一步，安装完成。 步骤三安装完JDK后，国际惯例配置环境变量。首先鼠标右键点击计算机–〉属性–〉高级系统设置 步骤四进入高级系统设置后，点击高级–〉环境变量 步骤五环境变量中看见path一项，点击path，点击编辑。 步骤六在变量值的最前面，添加C:\\Program Files\\Java\\jdk1.8.0_91\\bin确定即可。该路径为你的jdk安装好后的bin目录的路径，注意路径要放在双引号内，且结尾加封号。 步骤七如何验证是否安装成功，可以在cmd命令窗口中输入javac命令来查看。返回一大堆命令参数即可说明安装成功。怎么样，是不是很简单呢。","categories":[{"name":"JAVA","slug":"JAVA","permalink":"https://ahjie668.github.io/ahjie668/categories/JAVA/"}],"tags":[{"name":"JAVA","slug":"JAVA","permalink":"https://ahjie668.github.io/ahjie668/tags/JAVA/"}]},{"title":"利用html+javaSrcipt+css3实现光标动画","slug":"光标动画","date":"2020-08-19T15:24:27.295Z","updated":"2020-08-24T10:27:43.121Z","comments":true,"path":"2020/08/19/光标动画/","link":"","permalink":"https://ahjie668.github.io/ahjie668/2020/08/19/%E5%85%89%E6%A0%87%E5%8A%A8%E7%94%BB/","excerpt":"这个案例也是通过javaSrcipt(js)实现，这个案例相对比较简单，先是整体的HTML代码结构，这个案例呢javaSrcipt(js)是直接写在我们HTML的内部，没有通过外链的方式实现，因为代码量较少直接写在了整体结构之中，其实这个案例不仅仅是纯的javaSrcipt(js)代码，本案例只是利用了javaSrcipt(js)的一个时间来控制光标闪动的时间而已，而我们的CSS3样式呢，主要是让文字颜色，利用background使文字产生渐变的效果。","text":"这个案例也是通过javaSrcipt(js)实现，这个案例相对比较简单，先是整体的HTML代码结构，这个案例呢javaSrcipt(js)是直接写在我们HTML的内部，没有通过外链的方式实现，因为代码量较少直接写在了整体结构之中，其实这个案例不仅仅是纯的javaSrcipt(js)代码，本案例只是利用了javaSrcipt(js)的一个时间来控制光标闪动的时间而已，而我们的CSS3样式呢，主要是让文字颜色，利用background使文字产生渐变的效果。 详细代码如下12345678910111213141516171819202122232425262728293031323334&lt;!DOCTYPE html&gt;&lt;html lang=&quot;zh&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt; &lt;title&gt;光标动画&lt;/title&gt; &lt;style type=&quot;text/css&quot;&gt; *&#123; margin: 0; padding: 0; &#125; html,body&#123; height: 100%; overflow: hidden; background: black; text-align: center; &#125; h1&#123; margin-top: 50px; display: inline-block; color: rgba(255,255,255,.3); font:bold 80px &quot;微软雅黑&quot;; background: linear-gradient(120deg,rgba(255,255,255,0) 100px,rgba(255,255,255,1) 180px,rgba(255,255,255,0) 270px) no-repeat; -webkit-background-clip:text; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;h1&gt;欢迎来到阿杰的博客&lt;/h1&gt;&lt;/body&gt; &lt;/html&gt; 在插入以下javaSrcipt(js)代码1234567891011&lt;script type=&quot;text/javascript&quot;&gt; var h1 = document.querySelector(&quot;h1&quot;); var flag = -160; setInterval(function()&#123; flag+=10; if(flag == 1100)&#123; flag = -160; &#125; h1.style.backgroundPosition = flag +&quot;px&quot;; &#125;,30); &lt;/script&gt; 这个案例的话只是简单的javaSrcipt(js)基础知识，希望可以对来到阿杰博客的朋友有所帮助如代码有问题,请指点出来,大家讨论一下，谢谢!","categories":[{"name":"web前端","slug":"web前端","permalink":"https://ahjie668.github.io/ahjie668/categories/web%E5%89%8D%E7%AB%AF/"}],"tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"https://ahjie668.github.io/ahjie668/tags/JavaScript/"},{"name":"css","slug":"css","permalink":"https://ahjie668.github.io/ahjie668/tags/css/"}]},{"title":"js文字闪动效果","slug":"彩色文字","date":"2020-08-19T14:17:37.253Z","updated":"2020-08-25T14:16:52.091Z","comments":true,"path":"2020/08/19/彩色文字/","link":"","permalink":"https://ahjie668.github.io/ahjie668/2020/08/19/%E5%BD%A9%E8%89%B2%E6%96%87%E5%AD%97/","excerpt":"利用javaSrcipt(js)实现对文字的如跑马灯一样的效果。 效果如下: var Tname=\"欢迎来到码坑的博客\"; var Tlen=Tname.length; document.write(\"\"+Tname+\"\"); var col=new Array(\"#4FFFF\",\"#3333FF\",\"#FFCC00\",\"chartreuse\",\"#FFCC00\",\"#CC33FF\"); var ic=0; function Dcolor(){ var Strname=\"\"; for (i=0;i","text":"利用javaSrcipt(js)实现对文字的如跑马灯一样的效果。 效果如下: var Tname=\"欢迎来到码坑的博客\"; var Tlen=Tname.length; document.write(\"\"+Tname+\"\"); var col=new Array(\"#4FFFF\",\"#3333FF\",\"#FFCC00\",\"chartreuse\",\"#FFCC00\",\"#CC33FF\"); var ic=0; function Dcolor(){ var Strname=\"\"; for (i=0;i","categories":[{"name":"web前端","slug":"web前端","permalink":"https://ahjie668.github.io/ahjie668/categories/web%E5%89%8D%E7%AB%AF/"}],"tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"https://ahjie668.github.io/ahjie668/tags/JavaScript/"}]}],"categories":[{"name":"JAVA","slug":"JAVA","permalink":"https://ahjie668.github.io/ahjie668/categories/JAVA/"},{"name":"Maven","slug":"JAVA/Maven","permalink":"https://ahjie668.github.io/ahjie668/categories/JAVA/Maven/"},{"name":"web前端","slug":"web前端","permalink":"https://ahjie668.github.io/ahjie668/categories/web%E5%89%8D%E7%AB%AF/"},{"name":"扩展","slug":"扩展","permalink":"https://ahjie668.github.io/ahjie668/categories/%E6%89%A9%E5%B1%95/"}],"tags":[{"name":"Maven","slug":"Maven","permalink":"https://ahjie668.github.io/ahjie668/tags/Maven/"},{"name":"JAVA","slug":"JAVA","permalink":"https://ahjie668.github.io/ahjie668/tags/JAVA/"},{"name":"React","slug":"React","permalink":"https://ahjie668.github.io/ahjie668/tags/React/"},{"name":"Vue","slug":"Vue","permalink":"https://ahjie668.github.io/ahjie668/tags/Vue/"},{"name":"Hexo","slug":"Hexo","permalink":"https://ahjie668.github.io/ahjie668/tags/Hexo/"},{"name":"JavaScript","slug":"JavaScript","permalink":"https://ahjie668.github.io/ahjie668/tags/JavaScript/"},{"name":"css","slug":"css","permalink":"https://ahjie668.github.io/ahjie668/tags/css/"}]}